[main]
defaultWT2Realm = de.ls5.wt2.auth.WT2Realm
jwtWT2Realm = de.ls5.wt2.auth.jwt.JWTWT2Realm

securityManager.realms = $jwtWT2Realm, $defaultWT2Realm

#GIT TEST
# uncomment to disable any session storage via cookies
# in this (combined) example, however, it would break the session-based login method
# securityManager.subjectDAO.sessionStorageEvaluator.sessionStorageEnabled = false

authc.loginUrl = /login.jsp
authc.successUrl = /

logout.redirectUrl = /

# use a custom REST authenticator that returns a 401 instead of redirecting to the login.jsp
restAuthenticator = de.ls5.wt2.auth.RESTServiceAuthenticator

# use a custom filter for constructing AuthenticationTokens for JWT requests
jwtFilter = de.ls5.wt2.auth.jwt.JWTAuthenticationFilter

[urls]

# configuration for stateless authentication on each request
/rest/basic/** = noSessionCreation, restAuthenticator, authcBasic


# configuration for JWT based authentication
/rest/jwt/authenticate = anon
/rest/jwt/** = noSessionCreation, jwtFilter


# configuration for using session based authentication
/login.jsp = authc
/logout = logout


# do not send challenges for any of the REST-calls
/rest/** = restAuthenticator


# make static Angular resources globally available
/** = anon
